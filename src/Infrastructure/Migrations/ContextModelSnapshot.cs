// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stellantis.ProjectName.Infrastructure.Data;

#nullable disable

namespace Stellantis.ProjectName.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("FeedbackMembers", b =>
                {
                    b.Property<int>("FeedbackId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemberId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FeedbackId", "MemberId");

                    b.HasIndex("MemberId");

                    b.ToTable("FeedbackMembers", "dbo");
                });

            modelBuilder.Entity("IncidentMembers", b =>
                {
                    b.Property<int>("IncidentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemberId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IncidentId", "MemberId");

                    b.HasIndex("MemberId");

                    b.ToTable("IncidentMembers", "dbo");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.ApplicationData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AreaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("External")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("KnowledgeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductOwner")
                        .HasColumnType("TEXT");

                    b.Property<int>("ResponsibleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SquadId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("KnowledgeId");

                    b.HasIndex("ResponsibleId");

                    b.HasIndex("SquadId");

                    b.ToTable("ApplicationData", "dbo");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ManagerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Area", "dbo");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ChatMessages", "dbo");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.DocumentData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ApplicationDataId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationDataId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("DocumentData", "dbo");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Feedback", "dbo");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Incident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Incident", "dbo");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Integration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApplicationDataId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationDataId");

                    b.ToTable("Integration", "dbo");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Knowledge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("AssociatedApplicationIds")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("AssociatedSquadIds")
                        .HasColumnType("TEXT");

                    b.Property<int>("MemberId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SquadId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("SquadId");

                    b.HasIndex("MemberId", "ApplicationId")
                        .IsUnique();

                    b.ToTable("Knowledge", "dbo");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Manager", "dbo");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("SquadId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SquadId");

                    b.ToTable("Members", "dbo");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Notifications", "dbo");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Repo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ApplicationDataId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationDataId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Repo", "dbo");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Responsible", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AreaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Responsible", "dbo");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.ServiceData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("ServiceData", "dbo");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Squad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int?>("KnowledgeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KnowledgeId");

                    b.ToTable("Squads", "dbo");
                });

            modelBuilder.Entity("FeedbackMembers", b =>
                {
                    b.HasOne("Stellantis.ProjectName.Domain.Entities.Feedback", null)
                        .WithMany()
                        .HasForeignKey("FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stellantis.ProjectName.Domain.Entities.Member", null)
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IncidentMembers", b =>
                {
                    b.HasOne("Stellantis.ProjectName.Domain.Entities.Incident", null)
                        .WithMany()
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stellantis.ProjectName.Domain.Entities.Member", null)
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.ApplicationData", b =>
                {
                    b.HasOne("Stellantis.ProjectName.Domain.Entities.Area", "Area")
                        .WithMany("Applications")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stellantis.ProjectName.Domain.Entities.Knowledge", null)
                        .WithMany("AssociatedApplications")
                        .HasForeignKey("KnowledgeId");

                    b.HasOne("Stellantis.ProjectName.Domain.Entities.Responsible", "Responsible")
                        .WithMany()
                        .HasForeignKey("ResponsibleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stellantis.ProjectName.Domain.Entities.Squad", "Squad")
                        .WithMany("Applications")
                        .HasForeignKey("SquadId");

                    b.Navigation("Area");

                    b.Navigation("Responsible");

                    b.Navigation("Squad");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.DocumentData", b =>
                {
                    b.HasOne("Stellantis.ProjectName.Domain.Entities.ApplicationData", null)
                        .WithMany("Documents")
                        .HasForeignKey("ApplicationDataId");

                    b.HasOne("Stellantis.ProjectName.Domain.Entities.ApplicationData", "ApplicationData")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApplicationData");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Feedback", b =>
                {
                    b.HasOne("Stellantis.ProjectName.Domain.Entities.ApplicationData", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Incident", b =>
                {
                    b.HasOne("Stellantis.ProjectName.Domain.Entities.ApplicationData", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Integration", b =>
                {
                    b.HasOne("Stellantis.ProjectName.Domain.Entities.ApplicationData", "ApplicationData")
                        .WithMany("Integration")
                        .HasForeignKey("ApplicationDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationData");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Knowledge", b =>
                {
                    b.HasOne("Stellantis.ProjectName.Domain.Entities.ApplicationData", "Application")
                        .WithMany("Knowledges")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stellantis.ProjectName.Domain.Entities.Member", "Member")
                        .WithMany("Knowledges")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stellantis.ProjectName.Domain.Entities.Squad", "Squad")
                        .WithMany()
                        .HasForeignKey("SquadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Member");

                    b.Navigation("Squad");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Member", b =>
                {
                    b.HasOne("Stellantis.ProjectName.Domain.Entities.Squad", "Squad")
                        .WithMany("Members")
                        .HasForeignKey("SquadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Squad");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Repo", b =>
                {
                    b.HasOne("Stellantis.ProjectName.Domain.Entities.ApplicationData", null)
                        .WithMany("Repos")
                        .HasForeignKey("ApplicationDataId");

                    b.HasOne("Stellantis.ProjectName.Domain.Entities.ApplicationData", "ApplicationData")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApplicationData");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Responsible", b =>
                {
                    b.HasOne("Stellantis.ProjectName.Domain.Entities.Area", "Area")
                        .WithMany("Responsibles")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.ServiceData", b =>
                {
                    b.HasOne("Stellantis.ProjectName.Domain.Entities.ApplicationData", null)
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Squad", b =>
                {
                    b.HasOne("Stellantis.ProjectName.Domain.Entities.Knowledge", null)
                        .WithMany("AssociatedSquads")
                        .HasForeignKey("KnowledgeId");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.ApplicationData", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Integration");

                    b.Navigation("Knowledges");

                    b.Navigation("Repos");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Area", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Responsibles");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Knowledge", b =>
                {
                    b.Navigation("AssociatedApplications");

                    b.Navigation("AssociatedSquads");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Member", b =>
                {
                    b.Navigation("Knowledges");
                });

            modelBuilder.Entity("Stellantis.ProjectName.Domain.Entities.Squad", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
