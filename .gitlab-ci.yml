#image: 253882794486.dkr.ecr.us-east-1.amazonaws.com/build-tools:6bd37cc1
image: 253882794486.dkr.ecr.us-east-1.amazonaws.com/build-tools:b2e32bc1-net6

include:
  - project: "fca/architecture/IaC/cloud-digital/common-ci"
    file: "/job-commons.yml"

variables:
  # DOCKER_HOST: tcp://docker:2375
  # DOCKER_TLS_CERTDIR: ""
  REPOSITORY_URL: 924431524709.dkr.ecr.us-east-1.amazonaws.com/digital-esb-app-esb-baseproject-esb

# services:
#   - docker:24.0.5-dind

stages:
  - build
  - sonarqube
  - deploy


before_script:
  - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 924431524709.dkr.ecr.us-east-1.amazonaws.com
  #- aws ecr get-login-password --region "${AWS_REGION}" | docker login --username AWS --password-stdin 253882794486.dkr.ecr.us-east-1.amazonaws.com
  - IMAGE_TAG="$(echo $CI_COMMIT_SHA | head -c 8)"
  - VERSION=$(date +"%Y%m%d%H%M")
  - echo $IMAGE_TAG $CI_COMMIT_REF_NAME $VERSION
  - echo $REPOSITORY_URL

web-build:
  stage: build
  script:
    - docker build -t $REPOSITORY_URL:$IMAGE_TAG -f src/WebApi/Dockerfile .
    - docker push $REPOSITORY_URL:$IMAGE_TAG

#sonarqube:
#  image: 253882794486.dkr.ecr.us-east-1.amazonaws.com/build-tools:latest-devops-master-dotnet
#  stage: sonarqube
#  script:
#    - dotnet restore ./src
#    - echo $SONAR_URL $SONAR_LOGIN $CI_PROJECT_NAME $PATH
#    - mono /opt/sonar-scanner-msbuild/SonarScanner.MSBuild.dll begin /d:sonar.host.url=$SONAR_URL /d:sonar.login=$SONAR_LOGIN /k:$CI_PROJECT_NAME /n:$CI_PROJECT_NAME /v:1.0 /d:sonar.coverage.exclusions=**/*
#    - dotnet build ./src
#    - mono /opt/sonar-scanner-msbuild/SonarScanner.MSBuild.dll end /d:sonar.login=$SONAR_LOGIN
#  allow_failure: true
#  dependencies:
#    - web-build


sonarqube:
  image: 253882794486.dkr.ecr.us-east-1.amazonaws.com/build-tools:latest-devops-master
  stage: sonarqube
  script:
#    - vault read sonarqube/kv/login >> sonar_url.txt
#    - export SONAR_URL=$(cat sonar_url.txt | jq -r '.data.SONAR_URL')
#    - vault read sonarqube/kv/secret >> sonar_login.txt
#    - export SONAR_LOGIN=$(cat sonar_login.txt | jq -r '.data.SONAR_LOGIN')
    - export NAMESPACE=$(echo "$CI_PROJECT_NAMESPACE" | jq -Rr 'split("/") | .[1]')
    - /opt/sonar-scanner/sonar-scanner-6.0.0.4432-linux/bin/sonar-scanner -Dsonar.projectKey="com.ste.sa.$NAMESPACE.$CI_PROJECT_NAME" -Dsonar.sources=. -Dsonar.host.url=https://sonarqube.intra.stellantis.com -Dsonar.login=squ_4f6391317de359b7c13f44e636dc10271296fd57
  allow_failure: true

deploy:
  extends: .deploy-common
  stage: deploy
  script:
    - chmod +x version-update.sh
    - ./version-update.sh $IMAGE_TAG $CI_COMMIT_REF_NAME $CI_COMMIT_SHORT_SHA "baseproject-api" || { echo 'task failed' ; exit 1; }
    - git add . && git commit -am "Update module $CI_PROJECT_NAME with version $CI_COMMIT_SHORT_SHA $CI_COMMIT_REF_NAME by CI's jobs $CI_JOB_URL trigged by $GITLAB_USER_EMAIL"
    - git push origin $CI_COMMIT_REF_NAME
  when: manual
  only:
    - master
  dependencies:
    - web-build
    - sonarqube
