image: 253882794486.dkr.ecr.us-east-1.amazonaws.com/build-tools:master-net8

include:
  - project: "fca/architecture/IaC/cloud-digital/common-ci"
    file: "/job-commons.yml"

variables:
  REPOSITORY_URL: 924431524709.dkr.ecr.us-east-1.amazonaws.com/digital-esb-app-esb-baseproject-esb

stages:
  - test
  - security
  - build
  - deploy

before_script:
  - IMAGE_TAG="$(echo $CI_COMMIT_SHA | head -c 8)"
  - VERSION=$(date +"%Y%m%d%H%M")
  - echo $IMAGE_TAG $CI_COMMIT_REF_NAME $VERSION
  - echo $REPOSITORY_URL

test:
  image: mcr.microsoft.com/dotnet/sdk:8.0
  stage: test
  script:
    - mkdir -p ./src/artifacts
    - dotnet test ./src/Application.Tests/Application.Tests.csproj --test-adapter-path:. --logger:"junit;LogFilePath=..\artifacts\{assembly}-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
    - dotnet test ./src/Domain.Tests/Domain.Tests.csproj --test-adapter-path:. --logger:"junit;LogFilePath=..\artifacts\{assembly}-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
    - dotnet test ./src/Infrastructure.Tests/Infrastructure.Tests.csproj --test-adapter-path:. --logger:"junit;LogFilePath=..\artifacts\{assembly}-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
    - dotnet test ./src/WebApi.Tests/WebApi.Tests.csproj --test-adapter-path:. --logger:"junit;LogFilePath=..\artifacts\{assembly}-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
  artifacts:
    when: always
    paths:
      - ./src/artifacts/*-result.xml
    reports:
      junit:
        - ./src/artifacts/*-result.xml

web-build:
  stage: build
  script:
    - docker build -t $REPOSITORY_URL:$IMAGE_TAG -f src/WebApi/Dockerfile .
    - docker push $REPOSITORY_URL:$IMAGE_TAG

sonarqube:
  image: 253882794486.dkr.ecr.us-east-1.amazonaws.com/build-tools:latest-devops-master
  #image: 253882794486.dkr.ecr.us-east-1.amazonaws.com/build-tools:latest-devops-master-dotnet
  stage: security
  script:
    - export NAMESPACE=$(echo "$CI_PROJECT_NAMESPACE" | jq -Rr 'split("/") | .[1]')
    - /opt/sonar-scanner/sonar-scanner-6.0.0.4432-linux/bin/sonar-scanner -Dsonar.projectKey="com.ste.sa.$NAMESPACE.$CI_PROJECT_NAME" -Dsonar.sources=. -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_LOGIN
    #- apt-get update && apt-get install -y dotnet-sdk-8.0
    #- dotnet tool install --global dotnet-coverage
    #- export PATH="$PATH:/root/.dotnet/tools"
    #- dotnet restore ./src
    #- echo $SONAR_URL $SONAR_LOGIN $CI_PROJECT_ID-$CI_PROJECT_NAME $PATH
    #- mono /opt/sonar-scanner-msbuild/SonarScanner.MSBuild.dll begin /d:sonar.host.url=https://sonarqube.intra.stellantis.com /d:sonar.login=squ_4f6391317de359b7c13f44e636dc10271296fd57 /k:com.ste.sa-$CI_PROJECT_ID-$CI_PROJECT_NAME /n:"AMS Portal - Web API" /v:1.0 /d:sonar.coverage.exclusions="**/*.Tests/*" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
    #- dotnet build ./src --no-restore
    #- dotnet-coverage collect "dotnet test ./src" -f xml -o "coverage.xml"
    #- mono /opt/sonar-scanner-msbuild/SonarScanner.MSBuild.dll end /d:sonar.login=squ_4f6391317de359b7c13f44e636dc10271296fd57
  allow_failure: true

deploy:
  extends: .deploy-common
  stage: deploy
  script:
    - chmod +x version-update.sh
    - ./version-update.sh $IMAGE_TAG $CI_COMMIT_REF_NAME $CI_COMMIT_SHORT_SHA "baseproject-api" || { echo 'task failed' ; exit 1; }
    - git add . && git commit -am "Update module $CI_PROJECT_NAME with version $CI_COMMIT_SHORT_SHA $CI_COMMIT_REF_NAME by CI's jobs $CI_JOB_URL trigged by $GITLAB_USER_EMAIL"
    - git push origin $CI_COMMIT_REF_NAME
  when: manual
  only:
    - master
  dependencies:
    - web-build
    - sonarqube
